npx create-react-app my-react-hooks-app
cd my-react-hooks-app

Inside the src folder, create the following files:
App.js
Counter.js
UserList.js///

1. App.js

import React from 'react';
import Counter from './Counter';
import UserList from './UserList';

function App() {
  return (
    <div style={{ textAlign: 'center', margin: '50px' }}>
      <h1>React Hooks Example</h1>
      <Counter />
      <UserList />
    </div>
  );
}

export default App;


import React, { useState } from 'react';

function Counter() {
  // Declare a state variable 'count' with initial value 0
  const [count, setCount] = useState(0);

  return (
    <div>
      <h2>Counter: {count}</h2>
      <button onClick={() => setCount(count + 1)}>Increase</button>
      <button onClick={() => setCount(count - 1)}>Decrease</button>
      <button onClick={() => setCount(0)}>Reset</button>
    </div>
  );
}

export default Counter;


3. UserList.js

import React, { useState, useEffect } from 'react';

function UserList() {
  const [users, setUsers] = useState([]);

  // Fetch users when the component mounts
  useEffect(() => {
    const fetchUsers = async () => {
      const response = await fetch('https://jsonplaceholder.typicode.com/users');
      const data = await response.json();
      setUsers(data);
    };
    
    fetchUsers();
  }, []); // Empty dependency array means this runs once when the component mounts

  return (
    <div>
      <h2>User List</h2>
      <ul>
        {users.map(user => (
          <li key={user.id}>{user.name}</li>
        ))}
      </ul>
    </div>
  );
}

export default UserList;
